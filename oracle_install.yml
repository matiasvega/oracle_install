---
- hosts: localhost
  vars:
    ip: "{{ lookup('env','ip') }}"

  tasks:
  
    - name: Show the IP
      debug:
        var: "{{ ip }}"

    - name: Dynamically add a new DB host
      hosts: localhost
      tasks:
        - name: Add new host to group "new_db"
          add_host:
            name: "{{ ip }}"
            groups: new_db
            # ansible_user: jenkins




# - name: Install Oracle Database 19c
#   hosts: db_servers
#   become: true
#   vars_files:
#     - vars/main.yml

#   pre_tasks:
#     - name: Ensure required OS packages are installed
#       package:
#         name:
#           - unzip
#           - binutils
#           - compat-libcap1
#           - compat-libstdc++
#           - gcc
#           - gcc-c++
#           - glibc
#           - glibc-devel
#           - ksh
#           - libaio
#           - libaio-devel
#           - libgcc
#           - libstdc++
#           - libstdc++-devel
#           - make
#           - sysstat
#           - smartmontools
#           - net-tools
#         state: present

#     - name: Create required directories
#       file:
#         path: "{{ item }}"
#         state: directory
#         owner: "{{ oracle_user }}"
#         group: "{{ oracle_group }}"
#         mode: '0755'
#       loop:
#         - "{{ oracle_base }}"
#         - "{{ oracle_home }}"
#         - "{{ oracle_inventory }}"

#   tasks:
#     - name: Upload Oracle installer
#       copy:
#         src: "files/{{ oracle_zip_file }}"
#         dest: "/tmp/{{ oracle_zip_file }}"
#         mode: '0644'

#     - name: Unzip Oracle installer
#       unarchive:
#         src: "/tmp/{{ oracle_zip_file }}"
#         dest: "{{ oracle_home }}"
#         remote_src: yes
#         owner: "{{ oracle_user }}"
#         group: "{{ oracle_group }}"

#     - name: Run Oracle installer in silent mode
#       become_user: "{{ oracle_user }}"
#       command: >
#         {{ oracle_home }}/runInstaller
#         -silent
#         -responseFile {{ oracle_home }}/install/response/db_install.rsp
#         oracle.install.option=INSTALL_DB_SWONLY
#         ORACLE_HOME={{ oracle_home }}
#         ORACLE_BASE={{ oracle_base }}
#         oracle.install.db.InstallEdition=EE
#         oracle.install.db.OSDBA_GROUP=dba
#         oracle.install.db.OSOPER_GROUP=oper
#         oracle.install.db.OSBACKUPDBA_GROUP=backupdba
#         oracle.install.db.OSDGDBA_GROUP=dgdba
#         oracle.install.db.OSKMDBA_GROUP=kmdba
#         oracle.install.db.OSRACDBA_GROUP=racdba
#         DECLINE_SECURITY_UPDATES=true
#       args:
#         chdir: "{{ oracle_home }}"
#       register: install_result
#       ignore_errors: true

#     - name: Run root scripts after installation
#       command: "{{ item }}"
#       with_items:
#         - "{{ oracle_inventory }}/orainstRoot.sh"
#         - "{{ oracle_home }}/root.sh"
#       when: install_result.rc == 0
